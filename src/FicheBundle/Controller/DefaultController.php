<?phpnamespace FicheBundle\Controller;use Symfony\Bundle\FrameworkBundle\Controller\Controller;use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;use AdminBundle\Entity\CategorieProduit;use AdminBundle\Entity\Produit;use Symfony\Component\HttpFoundation\Request;use Symfony\Component\HttpFoundation\JsonResponse;/*** @Route("/home/{_locale}",requirements={*         "_locale": "en|fr"*     })*/class DefaultController extends Controller{    /**     * @Route("/{idCat}")     */    public function indexAction(Request $request,$idCat = null)    {        $em = $this->getDoctrine()->getManager();        $categorieProduits = $em->getRepository(CategorieProduit::class)->findBy(array(),array("nom"=>"ASC"));        if($idCat!==null):            $cat = $em->getRepository(CategorieProduit::class)->find($idCat);            $produits = $em->getRepository(Produit::class)->findBy(array("categorieProduit"=>$cat));        else:            $produits = $em->getRepository(Produit::class)->findAll();        endif;        return $this->render('FicheBundle:Default:index.html.twig',array(            "categorieProduits"=>$categorieProduits,            "fiches"=>$produits,            "locale"=>$request->getLocale()        ));    }    /**     * Finds and displays all denrees for product.     *     * @Route("/getByProduit/{id}", name="denree_get_by_product")     */    public function getByProduitAction($id)    {        $em = $this->getDoctrine()->getManager();        $produit = $em->getRepository(\AdminBundle\Entity\Produit::class)->find($id);        try{            if($produit!==null):                $arrayDenree=array();                foreach($produit->getEtapes() as $etape):                    $denrees = $em->getRepository(\AdminBundle\Entity\EtapeDenree::class)->findBy(array("etape"=>$etape));                    foreach($denrees as $d):                        if(!isset($arrayDenree[$d->getDenree()->getCategorieDenree()->getNom()])) $arrayDenree[$d->getDenree()->getCategorieDenree()->getNom()] = array();                        array_push($arrayDenree[$d->getDenree()->getCategorieDenree()->getNom()],array(                            "UniqueID"=>$d->getId(),                            "Nom"=>$d->getDenree()->getNom(),                            "pUHT"=>$d->getDenree()->getPUHT(),                            "quantite"=>$d->getQuantite(),                            "etape"=>$d->getEtape()->getTitre(),                            "etapeOrdre"=>$d->getEtape()->getOrdre(),                            "etapeID"=>$d->getEtape()->getId(),                            "denreeID"=>$d->getDenree()->getId(),                            "uniteMesure"=>$d->getDenree()->getUniteMesure()->getNom(),                        ));                    endforeach;                endforeach;            endif;            $arrayEtapes = array();            foreach($produit->getEtapes() as $etape):                $arrayEtapes[$etape->getOrdre()]=$etape->getId();            endforeach;                        return new JsonResponse(array("success"=>true,"data"=>$arrayDenree,"etapes"=>$arrayEtapes));        } catch(\Doctrine\ORM\ORMException $e){            return new JsonResponse(array("success"=>false,"message"=>$e->getMessage()));        } catch(\Exception $e){            return new JsonResponse(array("success"=>false,"message"=>$e->getMessage()));        }            }            /**     * Finds and displays a produit entity.     *     * @Route("/fiche/{id}", name="produit_show")     */    public function showAction(Request $request,Produit $produit)    {        $em = $this->getDoctrine()->getManager();        $categorieProduits = $em->getRepository(CategorieProduit::class)->findBy(array(),array("nom"=>"ASC"));//        if($request->getLocale()=="en")://            $produit->//        endif;        return $this->render('FicheBundle:produit:show.html.twig', array(            "categorieProduits"=>$categorieProduits,            'produit' => $produit,            "locale"=>$request->getLocale()        ));    }    /**     * @Route("/apport_energetique_journalier/", name="aej")     */    public function aejAction(Request $req)    {        $isJSON = $req->request->all();        $em = $this->getDoctrine()->getManager();        $categorieProduits = $em->getRepository(CategorieProduit::class)->findBy(array(),array("nom"=>"ASC"));        return (isset($isJSON['json'])) ? new JsonResponse($this->renderView('FicheBundle:Default:aejAjax.html.twig')) : $this->render('FicheBundle:Default:aej.html.twig',array("categorieProduits"=>$categorieProduits));            }    /**     * @Route("/search/", name="search")     */    public function searchAction(Request $req)    {        $em = $this->getDoctrine()->getManager();        $categorieProduits = $em->getRepository(CategorieProduit::class)->findBy(array(),array("nom"=>"ASC"));        $sql = " SELECT * FROM gf_produit p,gf_categorie_produit c WHERE p.categorieProduit = c.id";        $sql.=" AND             (                p.titre like '%".$_GET['searched']."%' OR                c.nom like '%".$_GET['searched']."%' OR                p.description like '%".$_GET['searched']."%'            )        ";                $stmt =  $em->getConnection()->prepare($sql);        if($stmt->execute()):            $res = $stmt->fetchAll();            foreach($res as $r=>$v){                $res[$r]['titre'] = preg_replace('/('.$_GET['searched'].')/i', "<span class='findedString'>$1</span>", $res[$r]['titre']);                $res[$r]['nom'] = preg_replace('/('.$_GET['searched'].')/i', "<span class='findedString'>$1</span>", $res[$r]['nom']);                $res[$r]['description'] = preg_replace('/('.$_GET['searched'].')/i', "<span class='findedString'>$1</span>", $res[$r]['description']);            }        endif;        return $this->render('FicheBundle:Default:search.html.twig',array(            "categorieProduits"=>$categorieProduits,            "fiches"=>$res,            "locale"=>$req->getLocale()        ));                    }}