<?phpnamespace AdminBundle\Controller;use AdminBundle\Entity\Denree;use Symfony\Bundle\FrameworkBundle\Controller\Controller;use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method;use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;use Symfony\Component\HttpFoundation\Request;use Symfony\Component\HttpFoundation\JsonResponse;use Doctrine\ORM\ORMException;use AdminBundle\Entity\Logs;/** * Denree controller. * * @Route("denrees") */class DenreeController extends Controller{    /**     * Lists all denree entities.     *     * @Route("/", name="denree_index")     * @Method("GET")     */    public function indexAction()    {        $em = $this->getDoctrine()->getManager();        $denrees = $em->getRepository('AdminBundle:Denree')->findAll();        return $this->render('AdminBundle:denree:index.html.twig', array(            'denrees' => $denrees,        ));    }    /**     * Creates a new denree entity.     *     * @Route("/new", name="denree_new")     * @Method({"GET", "POST"})     */    public function newAction(Request $request)    {        $denree = new Denree();        $user = $this->getUser();        $denree->setAuteur($user->getFirstname()." ".$user->getLastname());                $form = $this->createForm('AdminBundle\Form\DenreeType', $denree);        $form->handleRequest($request);        if ($form->isSubmitted() && $form->isValid()) {            $em = $this->getDoctrine()->getManager();            $L = new Logs();            $L->setAuteur($user->getFirstname()." ".$user->getLastname());            $L->setEntity("Denree");            $L->setTypeAction("Creation");            $L->setIdEntityText($denree->getNom());            $em->persist($denree);            $em->flush();                        $L->setIdEntity($denree->getId());            $em->persist($L);            $em->flush();            return $this->redirectToRoute('denree_index');        }        return $this->render('AdminBundle:denree:new.html.twig', array(            'denree' => $denree,            'form' => $form->createView(),        ));    }    /**     * Finds and displays a denree entity.     *     * @Route("/{id}", name="denree_show")     * @Method("GET")     */    public function showAction(Denree $denree)    {        $deleteForm = $this->createDeleteForm($denree);        return $this->render('AdminBundle:denree:show.html.twig', array(            'denree' => $denree,            'delete_form' => $deleteForm->createView(),        ));    }            /**     * Finds and displays a denree entity ajax.     *     * @Route("/Ajax/{id}", name="denree_show_ajax")     * @Method("GET")     */    public function showAjaxAction($id)    {        $em = $this->getDoctrine()->getManager();        $denree = $em->getRepository('AdminBundle:Denree')->find($id);        return new JsonResponse(array(            "nom"=>$denree->getNom(),            "uniteMesure"=>$denree->getUniteMesure()->getNom(),            "categorieDenree"=>$denree->getCategorieDenree()->getNom(),            "pUHT"=>$denree->getPUHT(),            "codeBarre"=>$denree->getCodeBarre(),        ));    }    /**     * Displays a form to edit an existing denree entity.     *     * @Route("/{id}/edit", name="denree_edit")     * @Method({"GET", "POST"})     */    public function editAction(Request $request, Denree $denree)    {        $deleteForm = $this->createDeleteForm($denree);        $editForm = $this->createForm('AdminBundle\Form\DenreeType', $denree);        $editForm->handleRequest($request);        if ($editForm->isSubmitted() && $editForm->isValid()) {            $user = $this->getUser();            $L = new Logs();            $L->setAuteur($user->getFirstname()." ".$user->getLastname());            $L->setEntity("Denree");            $L->setTypeAction("Modification");            $L->setIdEntity($denree->getId());            $L->setIdEntityText($denree->getNom());            $this->getDoctrine()->getManager()->persist($L);            $this->getDoctrine()->getManager()->flush();            return $this->redirectToRoute('denree_index');        }        return $this->render('AdminBundle:denree:edit.html.twig', array(            'denree' => $denree,            'edit_form' => $editForm->createView(),            'delete_form' => $deleteForm->createView(),        ));    }    /**     * Deletes a denree entity.     *     * @Route("/{id}", name="denree_delete")     */    public function deleteAction(Request $request, Denree $denree)    {        try{            $em = $this->getDoctrine()->getManager();            $user = $this->getUser();            $L = new Logs();            $L->setAuteur($user->getFirstname()." ".$user->getLastname());            $L->setEntity("Denree");            $L->setTypeAction("Suppression");            $L->setIdEntity($denree->getId());            $L->setIdEntityText($denree->getNom());            $this->getDoctrine()->getManager()->persist($L);            $em->remove($denree);            $em->flush();            return new JsonResponse(array("success"=>true));        } catch(\Doctrine\ORM\ORMException $e){            return new JsonResponse(array("success"=>false,"message"=>$e->getMessage()));        } catch(\Exception $e){            return new JsonResponse(array("success"=>false,"message"=>$e->getMessage()));        }    }    /**     * Creates a form to delete a denree entity.     *     * @param Denree $denree The denree entity     *     * @return \Symfony\Component\Form\Form The form     */    private function createDeleteForm(Denree $denree)    {        return $this->createFormBuilder()            ->setAction($this->generateUrl('denree_delete', array('id' => $denree->getId())))            ->setMethod('DELETE')            ->getForm()        ;    }}